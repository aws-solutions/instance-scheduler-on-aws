// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InstanceSchedulerRemoteChinaStack snapshot test 1`] = `
{
  "Conditions": {
    "EC2SchedulerCrossAccountRolekmsAccessCondition6C83D407": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                0,
                {
                  "Ref": "KmsKeyArns",
                },
              ],
            },
            "",
          ],
        },
      ],
    },
    "UsingAWSOrganizationsCondition": {
      "Fn::Equals": [
        {
          "Ref": "UsingAWSOrganizations",
        },
        "Yes",
      ],
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Account structure",
          },
          "Parameters": [
            "InstanceSchedulerAccount",
            "UsingAWSOrganizations",
            "Namespace",
          ],
        },
        {
          "Label": {
            "default": "Service-specific",
          },
          "Parameters": [
            "KmsKeyArns",
          ],
        },
      ],
      "ParameterLabels": {
        "InstanceSchedulerAccount": {
          "default": "Hub Account ID",
        },
        "KmsKeyArns": {
          "default": "Kms Key Arns for EC2",
        },
        "Namespace": {
          "default": "Namespace",
        },
        "UsingAWSOrganizations": {
          "default": "Use AWS Organizations",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "InstanceSchedulerAccount": {
      "AllowedPattern": "^\\d{12}$",
      "ConstraintDescription": "Account number is a 12 digit number",
      "Description": "Account ID of the Instance Scheduler Hub stack that should be allowed to schedule resources in this account.",
      "Type": "String",
    },
    "KmsKeyArns": {
      "Default": "",
      "Description": "comma-separated list of kms arns to grant Instance Scheduler kms:CreateGrant permissions to provide the EC2  service with Decrypt permissions for encrypted EBS volumes. This allows the scheduler to start EC2 instances with attached encrypted EBS volumes. provide just (*) to give limited access to all kms keys, leave blank to disable. For details on the exact policy created, refer to security section of the implementation guide (https://aws.amazon.com/solutions/implementations/instance-scheduler-on-aws/)",
      "Type": "CommaDelimitedList",
    },
    "Namespace": {
      "Default": "default",
      "Description": "Unique identifier used to differentiate between multiple solution deployments. Must be set to the same value as the Hub stack. Must be non-empty for Organizations deployments.",
      "Type": "String",
    },
    "UsingAWSOrganizations": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "No",
      "Description": "Use AWS Organizations to automate spoke account registration. Must be set to the same value as the Hub stack",
      "Type": "String",
    },
  },
  "Resources": {
    "AsgSchedulingRoleASGSchedulingPermissions6DEABC8F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Required permissions to describe AutoScaling Groups",
            },
            {
              "applies_to": [
                "Resource::arn:<AWS::Partition>:autoscaling:*:<AWS::AccountId>:autoScalingGroup:*:autoScalingGroupName/*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Required permissions to modify scheduled scaling actions on AutoScaling Groups",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "DescribeAutoScalingGroups and autoscaling:DescribeScheduledActions actions require wildcard permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:BatchPutScheduledUpdateGroupAction",
                "autoscaling:BatchDeleteScheduledAction",
                "autoscaling:CreateOrUpdateTags",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":autoscaling:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":autoScalingGroup:*:autoScalingGroupName/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeScheduledActions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AsgSchedulingRoleASGSchedulingPermissions6DEABC8F",
        "Roles": [
          {
            "Ref": "AsgSchedulingRoleF04B8CC9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AsgSchedulingRoleF04B8CC9": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "The role name is defined to allow cross account access from the hub account.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "InstanceSchedulerAccount",
                      },
                      ":role/",
                      {
                        "Ref": "Namespace",
                      },
                      "-AsgRequestHandler-Role",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Namespace",
              },
              "-ASG-Scheduling-Role",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EC2SchedulerCrossAccountRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "The role name is defined to allow cross account access from the hub account.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "InstanceSchedulerAccount",
                      },
                      ":role/",
                      {
                        "Ref": "Namespace",
                      },
                      "-SchedulingRequestHandler-Role",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Namespace",
              },
              "-Scheduler-Role",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EC2SchedulerCrossAccountRoleKmsPermissions93DB5FB5": {
      "Condition": "EC2SchedulerCrossAccountRolekmsAccessCondition6C83D407",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Specific kms keys are unknown until runtime, for security, access is instead restricted to only granting decryption permissions to the ec2 service for encrypted EBS volumes",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:CreateGrant",
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": true,
                },
                "ForAllValues:StringEquals": {
                  "kms:EncryptionContextKeys": [
                    "aws:ebs:id",
                  ],
                  "kms:GrantOperations": [
                    "Decrypt",
                  ],
                },
                "Null": {
                  "kms:EncryptionContextKeys": false,
                  "kms:GrantOperations": false,
                },
                "StringLike": {
                  "kms:ViaService": "ec2.*.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "KmsKeyArns",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2SchedulerCrossAccountRoleKmsPermissions93DB5FB5",
        "Roles": [
          {
            "Ref": "EC2SchedulerCrossAccountRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EC2SchedulerCrossAccountRoleSchedulingPermissions3E73CF8A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:db:*",
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:cluster:*",
                "Resource::arn:<AWS::Partition>:ec2:*:<AWS::AccountId>:instance/*",
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:snapshot:*",
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "required scheduling permissions",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "required scheduling permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeInstances",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:ModifyInstanceAttribute",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:ec2:*:\${AWS::AccountId}:instance/*",
              },
            },
            {
              "Action": "ssm:DescribeMaintenanceWindows",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "tag:GetResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:StopDBInstance",
                "rds:CreateDBSnapshot",
                "rds:AddTagsToResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:snapshot:*",
              },
            },
            {
              "Action": [
                "rds:AddTagsToResource",
                "rds:RemoveTagsFromResource",
                "rds:StartDBInstance",
                "rds:StopDBInstance",
                "rds:CreateDBSnapshot",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:db:*",
              },
            },
            {
              "Action": [
                "rds:AddTagsToResource",
                "rds:RemoveTagsFromResource",
                "rds:StartDBCluster",
                "rds:StopDBCluster",
                "rds:CreateDBClusterSnapshot",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:cluster:*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2SchedulerCrossAccountRoleSchedulingPermissions3E73CF8A",
        "Roles": [
          {
            "Ref": "EC2SchedulerCrossAccountRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RegisterSpokeAccountCustomResourceLambda8BF25EDC": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F",
        "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Python 3.11 is the newest available runtime. This finding is a false positive.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "This Lambda function does not need to access any resource provisioned within a VPC.",
            },
            {
              "id": "W58",
              "reason": "This Lambda function has permission provided to write to CloudWatch logs using the iam roles.",
            },
            {
              "id": "W92",
              "reason": "Lambda function is a custom resource. Concurrent calls are very limited.",
            },
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on code hash",
        "Description": "Custom Resource Provider used for spoke account self registration via aws organization",
        "Environment": {
          "Variables": {
            "HUB_REGISTRATION_LAMBDA_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":lambda:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "InstanceSchedulerAccount",
                  },
                  ":function:InstanceScheduler-",
                  {
                    "Ref": "Namespace",
                  },
                  "-SpokeRegistration",
                ],
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/my-solution-id/v9.9.9",
          },
        },
        "Handler": "handle_remote_registration_request",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":lambda:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "InstanceSchedulerAccount",
                    },
                    ":function:InstanceScheduler-",
                    {
                      "Ref": "Namespace",
                    },
                    "-SpokeRegistration",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SpokeRegistrationLogGroup7EBCC472",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85",
        "Roles": [
          {
            "Ref": "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RegisterSpokeAccountCustomResourceLambdaPolicyWaiter": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85",
      ],
      "Type": "AWS::CloudFormation::WaitConditionHandle",
    },
    "RegisterSpokeAccountCustomResourceLambdaRoleDD724340": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "required for xray",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Wildcard required for xray",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F",
        "Roles": [
          {
            "Ref": "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RemoteRegistrationCustomResource": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaPolicyWaiter",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "RegisterSpokeAccountCustomResourceLambda8BF25EDC",
            "Arn",
          ],
        },
      },
      "Type": "Custom::RegisterSpokeAccount",
      "UpdateReplacePolicy": "Delete",
    },
    "SpokeRegistrationLogGroup7EBCC472": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "This template has to be supported in gov cloud which doesn't yet have the feature to provide kms key id to cloudwatch log group",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RegisterSpokeAccountCustomResourceLambda8BF25EDC",
              },
            ],
          ],
        },
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`InstanceSchedulerRemoteStack snapshot test 1`] = `
{
  "Conditions": {
    "EC2SchedulerCrossAccountRolekmsAccessCondition6C83D407": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                0,
                {
                  "Ref": "KmsKeyArns",
                },
              ],
            },
            "",
          ],
        },
      ],
    },
    "UsingAWSOrganizationsCondition": {
      "Fn::Equals": [
        {
          "Ref": "UsingAWSOrganizations",
        },
        "Yes",
      ],
    },
  },
  "Mappings": {
    "AppRegistryForInstanceSchedulerSolution25A90F05": {
      "Data": {
        "AppRegistryApplicationName": "my-appreg-solution-name",
        "ApplicationType": "my-appreg-app-name",
        "ID": "my-solution-id",
        "SolutionName": "my-solution-name",
        "Version": "v9.9.9",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Account structure",
          },
          "Parameters": [
            "InstanceSchedulerAccount",
            "UsingAWSOrganizations",
            "Namespace",
          ],
        },
        {
          "Label": {
            "default": "Service-specific",
          },
          "Parameters": [
            "KmsKeyArns",
          ],
        },
      ],
      "ParameterLabels": {
        "InstanceSchedulerAccount": {
          "default": "Hub Account ID",
        },
        "KmsKeyArns": {
          "default": "Kms Key Arns for EC2",
        },
        "Namespace": {
          "default": "Namespace",
        },
        "UsingAWSOrganizations": {
          "default": "Use AWS Organizations",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "InstanceSchedulerAccount": {
      "AllowedPattern": "^\\d{12}$",
      "ConstraintDescription": "Account number is a 12 digit number",
      "Description": "Account ID of the Instance Scheduler Hub stack that should be allowed to schedule resources in this account.",
      "Type": "String",
    },
    "KmsKeyArns": {
      "Default": "",
      "Description": "comma-separated list of kms arns to grant Instance Scheduler kms:CreateGrant permissions to provide the EC2  service with Decrypt permissions for encrypted EBS volumes. This allows the scheduler to start EC2 instances with attached encrypted EBS volumes. provide just (*) to give limited access to all kms keys, leave blank to disable. For details on the exact policy created, refer to security section of the implementation guide (https://aws.amazon.com/solutions/implementations/instance-scheduler-on-aws/)",
      "Type": "CommaDelimitedList",
    },
    "Namespace": {
      "Default": "default",
      "Description": "Unique identifier used to differentiate between multiple solution deployments. Must be set to the same value as the Hub stack. Must be non-empty for Organizations deployments.",
      "Type": "String",
    },
    "UsingAWSOrganizations": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "No",
      "Description": "Use AWS Organizations to automate spoke account registration. Must be set to the same value as the Hub stack",
      "Type": "String",
    },
  },
  "Resources": {
    "AppRegistry968496A3": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Service Catalog application to track and manage all your resources for the solution ",
              {
                "Fn::FindInMap": [
                  "AppRegistryForInstanceSchedulerSolution25A90F05",
                  "Data",
                  "SolutionName",
                ],
              },
            ],
          ],
        },
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::FindInMap": [
                  "AppRegistryForInstanceSchedulerSolution25A90F05",
                  "Data",
                  "AppRegistryApplicationName",
                ],
              },
              {
                "Ref": "AWS::Region",
              },
              {
                "Ref": "AWS::AccountId",
              },
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "Tags": {
          "Solutions:ApplicationType": {
            "Fn::FindInMap": [
              "AppRegistryForInstanceSchedulerSolution25A90F05",
              "Data",
              "ApplicationType",
            ],
          },
          "Solutions:SolutionID": {
            "Fn::FindInMap": [
              "AppRegistryForInstanceSchedulerSolution25A90F05",
              "Data",
              "ID",
            ],
          },
          "Solutions:SolutionName": {
            "Fn::FindInMap": [
              "AppRegistryForInstanceSchedulerSolution25A90F05",
              "Data",
              "SolutionName",
            ],
          },
          "Solutions:SolutionVersion": {
            "Fn::FindInMap": [
              "AppRegistryForInstanceSchedulerSolution25A90F05",
              "Data",
              "Version",
            ],
          },
        },
      },
      "Type": "AWS::ServiceCatalogAppRegistry::Application",
    },
    "AsgSchedulingRoleASGSchedulingPermissions6DEABC8F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Required permissions to describe AutoScaling Groups",
            },
            {
              "applies_to": [
                "Resource::arn:<AWS::Partition>:autoscaling:*:<AWS::AccountId>:autoScalingGroup:*:autoScalingGroupName/*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Required permissions to modify scheduled scaling actions on AutoScaling Groups",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "DescribeAutoScalingGroups and autoscaling:DescribeScheduledActions actions require wildcard permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:BatchPutScheduledUpdateGroupAction",
                "autoscaling:BatchDeleteScheduledAction",
                "autoscaling:CreateOrUpdateTags",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":autoscaling:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":autoScalingGroup:*:autoScalingGroupName/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeScheduledActions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AsgSchedulingRoleASGSchedulingPermissions6DEABC8F",
        "Roles": [
          {
            "Ref": "AsgSchedulingRoleF04B8CC9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AsgSchedulingRoleF04B8CC9": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "The role name is defined to allow cross account access from the hub account.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "InstanceSchedulerAccount",
                      },
                      ":role/",
                      {
                        "Ref": "Namespace",
                      },
                      "-AsgRequestHandler-Role",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Namespace",
              },
              "-ASG-Scheduling-Role",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EC2SchedulerCrossAccountRole": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "The role name is defined to allow cross account access from the hub account.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "InstanceSchedulerAccount",
                      },
                      ":role/",
                      {
                        "Ref": "Namespace",
                      },
                      "-SchedulingRequestHandler-Role",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Namespace",
              },
              "-Scheduler-Role",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EC2SchedulerCrossAccountRoleKmsPermissions93DB5FB5": {
      "Condition": "EC2SchedulerCrossAccountRolekmsAccessCondition6C83D407",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Specific kms keys are unknown until runtime, for security, access is instead restricted to only granting decryption permissions to the ec2 service for encrypted EBS volumes",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:CreateGrant",
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": true,
                },
                "ForAllValues:StringEquals": {
                  "kms:EncryptionContextKeys": [
                    "aws:ebs:id",
                  ],
                  "kms:GrantOperations": [
                    "Decrypt",
                  ],
                },
                "Null": {
                  "kms:EncryptionContextKeys": false,
                  "kms:GrantOperations": false,
                },
                "StringLike": {
                  "kms:ViaService": "ec2.*.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "KmsKeyArns",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2SchedulerCrossAccountRoleKmsPermissions93DB5FB5",
        "Roles": [
          {
            "Ref": "EC2SchedulerCrossAccountRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EC2SchedulerCrossAccountRoleSchedulingPermissions3E73CF8A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:db:*",
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:cluster:*",
                "Resource::arn:<AWS::Partition>:ec2:*:<AWS::AccountId>:instance/*",
                "Resource::arn:<AWS::Partition>:rds:*:<AWS::AccountId>:snapshot:*",
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "required scheduling permissions",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "required scheduling permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeInstances",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:ModifyInstanceAttribute",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:ec2:*:\${AWS::AccountId}:instance/*",
              },
            },
            {
              "Action": "ssm:DescribeMaintenanceWindows",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "tag:GetResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "rds:DeleteDBSnapshot",
                "rds:DescribeDBSnapshots",
                "rds:StopDBInstance",
                "rds:CreateDBSnapshot",
                "rds:AddTagsToResource",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:snapshot:*",
              },
            },
            {
              "Action": [
                "rds:AddTagsToResource",
                "rds:RemoveTagsFromResource",
                "rds:StartDBInstance",
                "rds:StopDBInstance",
                "rds:CreateDBSnapshot",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:db:*",
              },
            },
            {
              "Action": [
                "rds:AddTagsToResource",
                "rds:RemoveTagsFromResource",
                "rds:StartDBCluster",
                "rds:StopDBCluster",
                "rds:CreateDBClusterSnapshot",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:\${AWS::Partition}:rds:*:\${AWS::AccountId}:cluster:*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EC2SchedulerCrossAccountRoleSchedulingPermissions3E73CF8A",
        "Roles": [
          {
            "Ref": "EC2SchedulerCrossAccountRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RegisterSpokeAccountCustomResourceLambda8BF25EDC": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F",
        "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Python 3.11 is the newest available runtime. This finding is a false positive.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "This Lambda function does not need to access any resource provisioned within a VPC.",
            },
            {
              "id": "W58",
              "reason": "This Lambda function has permission provided to write to CloudWatch logs using the iam roles.",
            },
            {
              "id": "W92",
              "reason": "Lambda function is a custom resource. Concurrent calls are very limited.",
            },
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on code hash",
        "Description": "Custom Resource Provider used for spoke account self registration via aws organization",
        "Environment": {
          "Variables": {
            "HUB_REGISTRATION_LAMBDA_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":lambda:",
                  {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  {
                    "Ref": "InstanceSchedulerAccount",
                  },
                  ":function:InstanceScheduler-",
                  {
                    "Ref": "Namespace",
                  },
                  "-SpokeRegistration",
                ],
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/my-solution-id/v9.9.9",
          },
        },
        "Handler": "handle_remote_registration_request",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":lambda:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "InstanceSchedulerAccount",
                    },
                    ":function:InstanceScheduler-",
                    {
                      "Ref": "Namespace",
                    },
                    "-SpokeRegistration",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SpokeRegistrationLogGroup7EBCC472",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85",
        "Roles": [
          {
            "Ref": "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RegisterSpokeAccountCustomResourceLambdaPolicyWaiter": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaPolicyAE6C7E85",
      ],
      "Type": "AWS::CloudFormation::WaitConditionHandle",
    },
    "RegisterSpokeAccountCustomResourceLambdaRoleDD724340": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F": {
      "Condition": "UsingAWSOrganizationsCondition",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "applies_to": [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "required for xray",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Wildcard required for xray",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RegisterSpokeAccountCustomResourceLambdaRoleDefaultPolicy3599775F",
        "Roles": [
          {
            "Ref": "RegisterSpokeAccountCustomResourceLambdaRoleDD724340",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RemoteRegistrationCustomResource": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "RegisterSpokeAccountCustomResourceLambdaPolicyWaiter",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "RegisterSpokeAccountCustomResourceLambda8BF25EDC",
            "Arn",
          ],
        },
      },
      "Type": "Custom::RegisterSpokeAccount",
      "UpdateReplacePolicy": "Delete",
    },
    "SpokeRegistrationLogGroup7EBCC472": {
      "Condition": "UsingAWSOrganizationsCondition",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "This template has to be supported in gov cloud which doesn't yet have the feature to provide kms key id to cloudwatch log group",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "RegisterSpokeAccountCustomResourceLambda8BF25EDC",
              },
            ],
          ],
        },
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
